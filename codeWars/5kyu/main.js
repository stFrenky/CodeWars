//1
// Мой друг Джон и я являемся членами «Fat to Fit Club(FFC)». Джон беспокоится,
// потому что каждый месяц публикуется список с весами участников,
// и каждый месяц он последний в списке, что означает, что он самый тяжелый.
// Я тот, кто составляет список, поэтому я сказал ему: «Не волнуйся больше,
// я изменю порядок списка». Было решено приписать числам «вес». Отныне вес числа будет равен сумме его цифр.
// Например, 99 будет иметь «вес» 18, 100 будет иметь «вес» 1, поэтому в списке 100 будет стоять перед 99.
// Учитывая строку с весами членов FFC в нормальном порядке, можете ли вы отсортировать эту строку по «весам» этих чисел ?

// Когда два числа имеют одинаковый «вес», давайте классифицируем их так,
// как если бы они были строками (в алфавитном порядке) а не числами:
// 180 предшествует 90, так как, имея тот же «вес» (9), оно предшествует строке.
// Все числа в списке положительные, и список может быть пустым.
function orderWeight(strng) {
	const arr = strng.split(' ').sort((a, b) => {
		const sumItems = item => item.split('').reduce((acum, item) => acum + +item, 0);

		const modA = sumItems(a);
		const modB = sumItems(b);

		return modA === modB ? a.localeCompare(b) : modA - modB;

	}).join(' ');

	return arr;

}



//2
// Напишите функцию, которая принимает неотрицательное целое число (секунды)
// в качестве входных данных и возвращает время в удобочитаемом формате (ЧЧ:ММ:СС).

// ЧЧ = часы, дополненные до 2 цифр, диапазон: 00–99
// ММ = минуты, дополненные до 2 цифр, диапазон: 00–59
// SS = секунды, дополненные двумя цифрами, диапазон: 00–59
// Максимальное время никогда не превышает 359999 (99:59:59)
function humanReadable(seconds) {

	let hh = Math.floor(seconds / 3600);
	seconds -= hh * 3600;

	let mm = Math.floor(seconds / 60);
	seconds -= mm * 60;

	let ss = seconds;

	const arr = [hh, mm, ss];

	const arr2 = arr.map((elem) => {
		elem = String(elem)

		if (elem.length === 1) {
			return `0${elem}`;

		} else {
			return elem;

		}
	})

	return arr2.join(':');

}